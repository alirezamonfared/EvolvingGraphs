Algorithms to calculate optimal journeys in evolving graphs.

Implemented by:
CÃ©sar Gamboa Machado
Paulo Henrique Floriano

To compile, use the command 'ant build'

To run the algorithm with the connections generated by ONE, use the command:

ant OneIntegration -dArgs="X Y Z ..."
where X is the number of nodes in the simulation,
Y is the simulation time (how many seconds the simulation lasts) and
Z is the name of the desired algorithm in the following list:
foremost, shortest, fastest, middlehop, middlearr, middlernd, quarterhop,
3quarterhop, middlett, fmiddlearr, fmiddlernd, quartertt, tquartertt.

If you input "eg" as the name of the algorithm, you can supply a list which can
contain many (or all) the algorithms above, but with abbreviated names. The names are:
fm, sh, fs, mh, ma, mrh, qh, tqh, fmtt, fma, fmr, fgtt, ftqtt.

For example, if you want to run foremost and shortest simulations, the command is
ant OneIntegration -dArgs="<nodes> <time> eg fm sh".

(if necessary, change the apropriate constants in OneIntegration.java to the 
 directory where one_1.3.0 is). Note that the existance of a Connectivity and a 
 Message creation reports inside one_1.3.0/reports are necessary.

Algorithms are implemented in the package EvolvingGraphs/algorithms and output a 
hash table each in one_1.3.0/eg/
